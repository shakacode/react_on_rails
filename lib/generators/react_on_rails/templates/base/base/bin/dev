#!/usr/bin/env ruby
# frozen_string_literal: true

# ReactOnRails Development Server
#
# This script provides a simple interface to the ReactOnRails development
# server management. The core logic is implemented in ReactOnRails::Dev
# classes for better maintainability and testing.
#
# Each command uses a specific Procfile for process management:
# - bin/dev (default/hmr): Uses Procfile.dev
# - bin/dev static: Uses Procfile.dev-static-assets
# - bin/dev prod: Uses Procfile.dev-prod-assets
#
# To customize development environment:
# 1. Edit the appropriate Procfile to modify which processes run
# 2. Modify this script for project-specific command-line behavior
# 3. Extend ReactOnRails::Dev classes in your Rails app for advanced customization
# 4. Use classes directly: ReactOnRails::Dev::ServerManager.start(:development, "Custom.procfile")

begin
  require "bundler/setup"
  require "react_on_rails/dev"
rescue LoadError
  # Fallback for when gem is not yet installed
  puts "Loading ReactOnRails development tools..."
  require_relative "../../lib/react_on_rails/dev"
end

# Main execution
case ARGV[0]
when "production-assets", "prod"
  ReactOnRails::Dev::ServerManager.start(:production_like)
when "static"
  ReactOnRails::Dev::ServerManager.start(:static, "Procfile.dev-static-assets")
when "kill"
  ReactOnRails::Dev::ServerManager.kill_processes
when "help", "--help", "-h"
  ReactOnRails::Dev::ServerManager.show_help
when "hmr", nil
  ReactOnRails::Dev::ServerManager.start(:development, "Procfile.dev")
else
  puts "Unknown argument: #{ARGV[0]}"
  puts "Run 'bin/dev help' for usage information"
  exit 1
end
