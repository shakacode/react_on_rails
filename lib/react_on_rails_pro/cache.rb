require "react_on_rails/utils"

module ReactOnRailsPro
  class Cache
    class << self
      def fetch_react_component(component_name, options)
        cache_key = react_component_cache_key(component_name, options)
        Rails.cache.fetch(cache_key) { yield }
      end

      # Cache keys by React on Rails Pro should build upon this base
      # Provide prerender: true in order to include bundle hash in the list of keys.
      # The bundle hash is necessary so that any changes to the bundle fault the cache.
      def base_cache_key(type, prerender: nil)
        keys = [
          type,
          ReactOnRails::VERSION,
          ReactOnRailsPro::VERSION
        ]

        # TODO: Move comment over to test
        # We only care about the bundle hash if prerendering because we're not caching anything
        # that would be generated by the bundle.
        keys.push(ReactOnRailsPro::Utils.bundle_hash) if prerender
        keys
      end

      def react_component_cache_key(component_name, options)
        # TODO: [CACHE] Add option for hash of serializers
        # https://github.com/shakacode/react_on_rails_pro/issues/32

        # NOTE: Rails seems to do this automatically: ActiveSupport::Cache.expand_cache_key(keys)
        [
          *base_cache_key("ror_component", prerender: options[:prerender]),
          component_name,
          options[:cache_key]
        ]
      end
    end
  end
end
