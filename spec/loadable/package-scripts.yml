scripts:
  webpack-dev-server:
    default:
      description: Run the webpack dev server.
      script: NODE_OPTIONS="--max-old-space-size=4096" NODE_ENV=development RAILS_ENV=development webpack-dev-server --env=devServer --config webpack.config.babel.js
    debug:
      description: Run the webpack dev server using the debugger.
      script: NODE_OPTIONS="--max-old-space-size=4096" NODE_ENV=development node --inspect-brk node_modules/.bin/webpack-dev-server --env=devServer --config webpack.config.babel.js

  build:
    prod:
      default:
        description: Build client and server bundles for production env.
        script: nps clear.prod && nps build.prod.client && nps build.prod.server
      client:
        default:
          description: Build client bundles for production env.
          script: NODE_OPTIONS="--max-old-space-size=4096" NODE_ENV=production RAILS_ENV=production webpack --env=prod --config webpack.config.babel.js
      server:
        default:
          description: Build server bundle for production env.
          script: NODE_ENV=production RAILS_ENV=production webpack --env=serverBundleProd --config webpack.config.babel.js
    dev:
      default:
        description: Build client and server bundles for dev env.
        script: concurrently --prefix "[{name}]" --names "CLIENT_BUNDLES,SERVER_BUNDLE" "nps build.dev.client" "nps build.dev.server"
      watch:
        description: Build client and server bundles for dev env (watch mode enabled).
        script: nps clear.dev && concurrently --kill-others -c "bgBlue.bold,bgMagenta.bold,bgGreen.bold" --prefix "[{name}]" --names "CLIENT_BUNDLES,SERVER_BUNDLE" "nps build.dev.client.watch" "nps build.dev.server.watch"
      client:
        default:
          description: Build client bundles for dev env.
          script: NODE_OPTIONS="--max-old-space-size=4096" NODE_ENV=development RAILS_ENV=development webpack --env=dev --config webpack.config.babel.js
        watch:
          description: Build client bundles for dev env (watch mode enabled).
          script: nps "build.dev.client --watch"
      server:
        default:
          description: Build server bundle for dev env.
          script: NODE_ENV=development RAILS_ENV=development webpack --env=serverBundleDev --config webpack.config.babel.js
        watch:
          description: Build server bundle for dev env (watch mode enabled).
          script: nps "build.dev.server --watch"
    rspec:
      default:
        description: Build client and server bundles for RSpec tests.
        script: concurrently --restart-tries 2 --prefix "[{name}]" --names "CLIENT_BUNDLES,SERVER_BUNDLE" "nps build.rspec.client" "nps build.rspec.server"
      watch:
        description: Build client and server bundles for RSpec tests (watch mode enabled).
        script: concurrently --kill-others --prefix "[{name}]" --names "CLIENT_BUNDLES,SERVER_BUNDLE" "nps build.rspec.client.watch" "nps build.rspec.server.watch"
      client:
        default:
          description: Build client bundles for RSpec env.
          script: NODE_OPTIONS="--max-old-space-size=4096" BABEL_ENV=test RAILS_ENV=test NODE_ENV=test webpack --env=rspec --config webpack.config.babel.js
        watch:
          description: Build client bundles for RSpec env (watch mode enabled).
          script: nps "build.rspec.client --watch"
      server:
        default:
          description: Build server bundle for RSpec env.
          script: BABEL_ENV=test RAILS_ENV=test NODE_ENV=test webpack --env=serverBundleRspec --config webpack.config.babel.js
        watch:
          description: Build server bundle for RSpec env (watch mode enabled).
          script: nps "build.rspec.server --watch"

  up:
    default:
      description: Wipe node_modules and reinstall dependencies.
      script: trash node_modules && yarn install
    noCache:
      description: Wipe node_modules and reinstall dependencies without cache.
      script: trash node_modules && yarn cache clean && yarn install

  clear:
    dev:
      default:
        description: Clear all webpack bundles and assets from `public/webpack/dev`
        script: trash ./public/webpack/development/*
