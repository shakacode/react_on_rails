version: 2
aliases:
- name: Print system information
  command: |
    echo "Linux release: "; cat /etc/issue
    echo "Current user: "; whoami
    echo "Current directory: "; pwd
    echo "Ruby version: "; ruby -v
    echo "Node version: "; node -v
    echo "Yarn version: "; yarn --version
    echo "Bundler version: "; bundle --version
- name: Linting of JS
  command: yarn start lint
- name: Linting of Ruby
  command: bundle exec rubocop
- name: Check formatting
  command: yarn start format.listDifferent
- name: Install Node modules with Yarn for renderer package
  command: yarn install --no-progress --no-emoji
- name: Install Node modules with Yarn for dummy app
  command: cd spec/dummy && yarn install --no-progress --no-emoji
- name: Install yarn link for react-on-rails
  command: yarn link
- name: Install yarn link for react-on-rails
  command: cd spec/dummy/client && yarn link react-on-rails
- name: Install Ruby Gems for dummy app
  command: |
    gem install bundler
    echo "Bundler version: "; bundle --version
    cd spec/dummy && bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
- name: Install Ruby Gems for package
  command: |
    gem install bundler
    echo "Bundler version: "; bundle --version
    bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
- name: Restore cached node_modules directory
  keys:
  - v3-package-node-modules-cache-{{ checksum "yarn.lock" }}
- name: Restore cached spec/dummy/node_modules directory
  keys:
  - v3-dummy-app-node-modules-cache-{{ checksum "spec/dummy/yarn.lock" }}
- name: Restore cached Ruby Gems for dummy app
  keys:
  - v3-dummy-app-gem-cache-{{ checksum "spec/dummy/Gemfile.lock" }}
- name: Restore cached Ruby Gems for package
  keys:
  - v3-package-app-gem-cache-{{ checksum "react_on_rails.gemspec" }}
- name: Ensure minimum required Chrome version
  command: |
    echo -e "Installed $(google-chrome --version)\n"
    MINIMUM_REQUIRED_CHROME_VERSION=75
    INSTALLED_CHROME_MAJOR_VERSION="$(google-chrome --version | tr ' .' '\t' | cut -f3)"
    if [[ $INSTALLED_CHROME_MAJOR_VERSION < $MINIMUM_REQUIRED_CHROME_VERSION ]]; then
      wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
      sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
      sudo apt-get update
      sudo apt-get install google-chrome-stable
      echo -e "\nInstalled $(google-chrome --version)"
    fi
jobs:
  lint-js-and-ruby:
    docker:
    - image: circleci/ruby:2.6-node-browsers
    steps:
    - checkout
    - run:
        name: Print system information
        command: |
          echo "Linux release: "; cat /etc/issue
          echo "Current user: "; whoami
          echo "Current directory: "; pwd
          echo "Ruby version: "; ruby -v
          echo "Node version: "; node -v
          echo "Yarn version: "; yarn --version
          echo "Bundler version: "; bundle --version
    - restore_cache:
        name: Restore cached node_modules directory
        keys:
        - v3-package-node-modules-cache-{{ checksum "yarn.lock" }}
    - restore_cache:
        name: Restore cached Ruby Gems for package
        keys:
        - v3-package-app-gem-cache-{{ checksum "react_on_rails.gemspec" }}
    - run:
        name: Install Ruby Gems for package
        command: |
          gem install bundler
          echo "Bundler version: "; bundle --version
          bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
    - run:
        name: Linting of Ruby
        command: bundle exec rubocop
    - run:
        name: Linting of JS
        command: yarn start lint
    - run:
        name: Check formatting
        command: yarn start format.listDifferent
  prettier:
    docker:
    - image: circleci/ruby:2.6-node-browsers
    parallelism: 1
    steps:
    - checkout
    - restore_cache:
        name: Restore cached node_modules directory
        keys:
        - v3-package-node-modules-cache-{{ checksum "yarn.lock" }}
    - run:
        name: prettier
        command: yarn start format.listDifferent
  install-package-node-packages:
    docker:
    - image: circleci/ruby:2.6-node-browsers
    steps:
    - checkout
    - run:
        name: Print system information
        command: |
          echo "Linux release: "; cat /etc/issue
          echo "Current user: "; whoami
          echo "Current directory: "; pwd
          echo "Ruby version: "; ruby -v
          echo "Node version: "; node -v
          echo "Yarn version: "; yarn --version
          echo "Bundler version: "; bundle --version
    - restore_cache:
        name: Restore cached node_modules directory
        keys:
        - v3-package-node-modules-cache-{{ checksum "yarn.lock" }}
    - run:
        name: Install Node modules with Yarn for renderer package
        command: yarn install --no-progress --no-emoji
    - save_cache:
        name: Save root node_modules to cache
        key: v3-package-node-modules-cache-{{ checksum "yarn.lock" }}
        paths:
        - node_modules
  install-dummy-app-node-packages:
    docker:
    - image: circleci/ruby:2.6-node-browsers
    steps:
    - checkout
    - run:
        name: Print system information
        command: |
          echo "Linux release: "; cat /etc/issue
          echo "Current user: "; whoami
          echo "Current directory: "; pwd
          echo "Ruby version: "; ruby -v
          echo "Node version: "; node -v
          echo "Yarn version: "; yarn --version
          echo "Bundler version: "; bundle --version
    - restore_cache:
        name: Restore cached spec/dummy/node_modules directory
        keys:
        - v3-dummy-app-node-modules-cache-{{ checksum "spec/dummy/yarn.lock" }}
    - run:
        name: Install yarn link for react-on-rails
        command: yarn link
    - run:
        name: Install yarn link for react-on-rails
        command: cd spec/dummy/client && yarn link react-on-rails
    - run:
        name: Install Node modules with Yarn for dummy app
        command: cd spec/dummy && yarn install --no-progress --no-emoji
    - save_cache:
        name: Save spec/dummy/node_modules to cache
        key: v3-dummy-app-node-modules-cache-{{ checksum "spec/dummy/yarn.lock" }}
        paths:
        - spec/dummy/node_modules
        - spec/dummy/node_modules
  install-package-ruby-gems:
    docker:
    - image: circleci/ruby:2.6-node-browsers
    steps:
    - checkout
    - run:
        name: Print system information
        command: |
          echo "Linux release: "; cat /etc/issue
          echo "Current user: "; whoami
          echo "Current directory: "; pwd
          echo "Ruby version: "; ruby -v
          echo "Node version: "; node -v
          echo "Yarn version: "; yarn --version
          echo "Bundler version: "; bundle --version
    - restore_cache:
        name: Restore cached Ruby Gems for package
        keys:
        - v3-package-app-gem-cache-{{ checksum "react_on_rails.gemspec" }}
    - run:
        name: Install Ruby Gems for package
        command: |
          gem install bundler
          echo "Bundler version: "; bundle --version
          bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
    - save_cache:
        name: Save dummy app ruby gems to cache
        key: v3-package-app-gem-cache-{{ checksum "react_on_rails.gemspec" }}
        paths:
        - vendor/bundle
  install-dummy-app-ruby-gems:
    docker:
    - image: circleci/ruby:2.6-node-browsers
    steps:
    - checkout
    - run:
        name: Print system information
        command: |
          echo "Linux release: "; cat /etc/issue
          echo "Current user: "; whoami
          echo "Current directory: "; pwd
          echo "Ruby version: "; ruby -v
          echo "Node version: "; node -v
          echo "Yarn version: "; yarn --version
          echo "Bundler version: "; bundle --version
    - restore_cache:
        name: Restore cached Ruby Gems for dummy app
        keys:
        - v3-dummy-app-gem-cache-{{ checksum "spec/dummy/Gemfile.lock" }}
    - run:
        name: Install Ruby Gems for dummy app
        command: |
          gem install bundler
          echo "Bundler version: "; bundle --version
          cd spec/dummy && bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
    - save_cache:
        name: Save dummy app ruby gems to cache
        key: v3-dummy-app-gem-cache-{{ checksum "spec/dummy/Gemfile.lock" }}
        paths:
        - spec/dummy/vendor/bundle
  build-dummy-app-webpack-test-bundles:
    docker:
    - image: circleci/ruby:2.6-node-browsers
    steps:
    - checkout
    - run:
        name: Print system information
        command: |
          echo "Linux release: "; cat /etc/issue
          echo "Current user: "; whoami
          echo "Current directory: "; pwd
          echo "Ruby version: "; ruby -v
          echo "Node version: "; node -v
          echo "Yarn version: "; yarn --version
          echo "Bundler version: "; bundle --version
    - run:
        name: Install yarn link for react-on-rails
        command: yarn link
    - restore_cache:
        name: Restore cached spec/dummy/node_modules directory
        keys:
        - v3-dummy-app-node-modules-cache-{{ checksum "spec/dummy/yarn.lock" }}
    - run:
        name: Install yarn link for react-on-rails
        command: cd spec/dummy/client && yarn link react-on-rails
    - run:
        name: Install Node modules with Yarn for dummy app
        command: cd spec/dummy && yarn install --no-progress --no-emoji
    - run:
        name: Install Ruby Gems for dummy app
        command: |
          gem install bundler
          echo "Bundler version: "; bundle --version
          cd spec/dummy && bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
    - run:
        name: Build test bundles for dummy app
        command: cd spec/dummy && yarn run build:test
    - save_cache:
        name: Save test webpack bundles to cache (for build number checksum used by rspec job)
        key: v3-dummy-app-webpack-bundle-{{ .Revision }}
        paths:
        - spec/dummy/public/webpack
  package-js-tests:
    docker:
    - image: circleci/ruby:2.6-node-browsers
    steps:
    - checkout
    - run:
        name: Print system information
        command: |
          echo "Linux release: "; cat /etc/issue
          echo "Current user: "; whoami
          echo "Current directory: "; pwd
          echo "Ruby version: "; ruby -v
          echo "Node version: "; node -v
          echo "Yarn version: "; yarn --version
          echo "Bundler version: "; bundle --version
    - restore_cache:
        name: Restore cached node_modules directory
        keys:
        - v3-package-node-modules-cache-{{ checksum "yarn.lock" }}
    - run:
        name: Install Node modules with Yarn for renderer package
        command: yarn install --no-progress --no-emoji
    - run:
        name: Run JS unit tests for Renderer package
        command: yarn test
  rspec-package-specs:
    docker:
    - image: circleci/ruby:2.6-node-browsers
    steps:
    - checkout
    - run:
        name: Print system information
        command: |
          echo "Linux release: "; cat /etc/issue
          echo "Current user: "; whoami
          echo "Current directory: "; pwd
          echo "Ruby version: "; ruby -v
          echo "Node version: "; node -v
          echo "Yarn version: "; yarn --version
          echo "Bundler version: "; bundle --version
    - restore_cache:
        name: Restore cached Ruby Gems for package
        keys:
        - v3-package-app-gem-cache-{{ checksum "react_on_rails.gemspec" }}
    - run:
        name: Install Ruby Gems for package
        command: |
          gem install bundler
          echo "Bundler version: "; bundle --version
          bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
    - run:
        name: Run rspec tests
        command: |
          bundle exec rspec spec/react_on_rails
    - store_test_results:
        path: ~/rspec
    - store_artifacts:
        path: log/test.log
  rspec-dummy-app:
    docker:
    - image: circleci/ruby:2.6-node-browsers
    steps:
    - checkout
    - run:
        name: Print system information
        command: |
          echo "Linux release: "; cat /etc/issue
          echo "Current user: "; whoami
          echo "Current directory: "; pwd
          echo "Ruby version: "; ruby -v
          echo "Node version: "; node -v
          echo "Yarn version: "; yarn --version
          echo "Bundler version: "; bundle --version
    - restore_cache:
        name: Restore cached Ruby Gems for package
        keys:
        - v3-package-app-gem-cache-{{ checksum "react_on_rails.gemspec" }}
    - restore_cache:
        name: Restore cached Ruby Gems for dummy app
        keys:
        - v3-dummy-app-gem-cache-{{ checksum "spec/dummy/Gemfile.lock" }}
    - restore_cache:
        name: Restore cached webpack bundles for dummy app
        key: v3-dummy-app-webpack-bundle-{{ .Revision }}
    - restore_cache:
        name: Restore cached spec/dummy/node_modules directory
        keys:
        - v3-dummy-app-node-modules-cache-{{ checksum "spec/dummy/yarn.lock" }}
    - run:
        name: Install Ruby Gems for dummy app
        command: |
          gem install bundler
          echo "Bundler version: "; bundle --version
          cd spec/dummy && bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
    - run:
        name: Ensure minimum required Chrome version
        command: |
          echo -e "Installed $(google-chrome --version)\n"
          MINIMUM_REQUIRED_CHROME_VERSION=75
          INSTALLED_CHROME_MAJOR_VERSION="$(google-chrome --version | tr ' .' '\t' | cut -f3)"
          if [[ $INSTALLED_CHROME_MAJOR_VERSION < $MINIMUM_REQUIRED_CHROME_VERSION ]]; then
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            sudo apt-get update
            sudo apt-get install google-chrome-stable
            echo -e "\nInstalled $(google-chrome --version)"
          fi
    - run:
        name: Touch webpack bundles
        command: touch spec/dummy/public/webpack/test/*
    - run:
        name: Run rspec tests
        command: |
          cd spec/dummy && SERVER_RENDERER=ExecJS bundle exec rspec --format RspecJunitFormatter \
                                             --out ~/rspec/rspec.xml \
                                             --format documentation
    - store_test_results:
        path: ~/rspec
    - store_artifacts:
        path: spec/dummy/tmp/capybara
    - store_artifacts:
        path: spec/dummy/log/test.log
    - store_artifacts:
        path: spec/dummy/yarn-error.log
workflows:
  version: 2
  build-and-test:
    jobs:
    - install-package-node-packages
    - install-package-ruby-gems
    - install-dummy-app-node-packages
    - install-dummy-app-ruby-gems
    - lint-js-and-ruby:
        requires:
        - install-package-node-packages
        - install-package-ruby-gems
    - prettier:
        filters:
          branches:
            ignore: master
        requires:
        - install-package-node-packages
    - build-dummy-app-webpack-test-bundles:
        requires:
        - install-dummy-app-node-packages
    - package-js-tests:
        requires:
        - install-package-node-packages
    - rspec-package-specs:
        requires:
        - install-package-ruby-gems
        - build-dummy-app-webpack-test-bundles
        - install-dummy-app-ruby-gems
    - rspec-dummy-app:
        requires:
        - install-package-ruby-gems
        - install-dummy-app-ruby-gems
        - build-dummy-app-webpack-test-bundles
