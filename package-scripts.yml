scripts:
  test:
    default:
      description: Run all JS tests
      script: jest packages/node-renderer/**/*.test.[jt]s jest packages/node-renderer/**/**/*.test.[jt]s
    debug:
      description: Debug all JS tests
      script: ndb jest --runInBand packages/node-renderer/**/*.test.[jt]s packages/node-renderer/**/**/*.test.[jt]s
  check:
    description: Run all checks
    script: nps lint && nps format.listDifferent && nps test && nps check-typescript
  check-typescript:
    description: Check for TypeScript errors
    script: nps "build --noEmit" && tsc --project packages/node-renderer/tests && cd spec/dummy && yarn run tsc -p client/tsconfig.json --noEmit
  fix:
    description: Run all code fixes before committing
    script: nps eslint.fix && nps format
  node-renderer:
    default:
      description:
      script: jest packages/node-renderer/**/*.test.[jt]s packages/node-renderer/**/**/*.test.[jt]s
    debug:
      description: Debug Node Renderer
      script: rm -rf /tmp/react-on-rails-pro-node-renderer-bundles && nps build && RENDERER_LOG_LEVEL=info NODE_DEBUG=ROR node -r source-map-support/register packages/node-renderer/dist/default-node-renderer.js
  lint:
    description: Run all linters
    script: concurrently --prefix "[{name}]" --names "ESLINT, RUBOCOP, PRETTIER" -c "blue,yellow,magenta,orange" "nps eslint" "bundle exec rubocop" "nps format.listDifferent"

  build:
    description: Build the project
    script: echo "building the project" && tsc --project packages/node-renderer/src

  clean:
    description: Clean the project
    script: rm -rf packages/node-renderer/dist

  eslint:
    default:
      description: Run eslint.
      script: eslint . --ext ".js,.jsx,.ts,.tsx" --report-unused-disable-directives
    fix:
      description: Run eslint and auto-fix.
      script: nps "eslint --fix"
    debug:
      description: Run eslint in debug mode.
      script: DEBUG=eslint:cli-engine nps eslint

  format:
    default:
      description: Format files using prettier.
      script: concurrently --prefix "[{name}]" --names "js,ts,json" -c "yellow,magenta,green" "nps format.js" "nps format.ts" "nps format.json"
    listDifferent:
      description: Check that all files were formatted using prettier.
      script: |
        concurrently \
          --prefix "[{name}]" \
          --names "js,ts,json" \
          -c "yellow,magenta,green" \
          "nps format.js.listDifferent" \
          "nps format.ts.listDifferent" \
          "nps format.json.listDifferent"
    js:
      default:
        description: Run prettier on JS.
        script: prettier "**/*.@(js|jsx)" --write
      listDifferent:
        description: Check if any JS files would change by running prettier.
        script: prettier "**/*.@(js|jsx)" --list-different
    ts:
      default:
        description: Run prettier on TS.
        script: prettier "**/*.@(ts|tsx)" --write
      listDifferent:
        description: Check if any TS files would change by running prettier.
        script: prettier "**/*.@(ts|tsx)" --list-different
    json:
      default:
        description: Run prettier on JSON files.
        script: rm -rf packages/node-renderer/tests/tmp && prettier "**/*.json" --write
      listDifferent:
        description: Check if any JSON files would change by running prettier.
        script: prettier "**/*.json" --list-different

  renderer:
    default:
      description: Starts the node renderer.
      script: nps build && RENDERER_PORT=3800 RENDERER_SUPPORT_MODULES=TRUE node ./packages/node-renderer/dist/default-node-renderer.js
    debug:
      description: Starts the node renderer with debugging enabled. See Node.js V8 --inspector Manager (NiM)
      script: nps build && RENDERER_WORKERS_COUNT=1 RENDERER_PORT=3800 RENDERER_SUPPORT_MODULES=TRUE ndb ./packages/node-renderer/dist/default-node-renderer.js
